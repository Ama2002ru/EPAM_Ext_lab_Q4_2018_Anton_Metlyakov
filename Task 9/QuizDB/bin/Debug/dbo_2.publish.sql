/*
Deployment script for QuizDB_Test

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "QuizDB_Test"
:setvar DefaultFilePrefix "QuizDB_Test"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[M_COURSES]...';


GO
CREATE TABLE [dbo].[M_COURSES] (
    [COURSE_ID]   INT            NOT NULL,
    [COURSE_NAME] NVARCHAR (100) NOT NULL,
    CONSTRAINT [PK_M_COURSES] PRIMARY KEY CLUSTERED ([COURSE_ID] ASC),
    CONSTRAINT [NK1_M_COURSES] UNIQUE NONCLUSTERED ([COURSE_NAME] ASC)
);


GO
PRINT N'Creating [dbo].[M_QUESTIONS]...';


GO
CREATE TABLE [dbo].[M_QUESTIONS] (
    [QUESTION_ID]         INT             NOT NULL,
    [QUIZ_ID]             INT             NOT NULL,
    [INFO]                NVARCHAR (1000) NOT NULL,
    [TEXT]                NVARCHAR (1000) NOT NULL,
    [CORRECT_OPTION_FLAG] INT             NOT NULL,
    CONSTRAINT [PK_M_QUESTIONS] PRIMARY KEY CLUSTERED ([QUESTION_ID] ASC)
);


GO
PRINT N'Creating [dbo].[M_QUIZ_ANSWERS]...';


GO
CREATE TABLE [dbo].[M_QUIZ_ANSWERS] (
    [QUIZ_ANSWERS_ID] INT      NOT NULL,
    [QUIZ_ID]         INT      NOT NULL,
    [QUESTION_ID]     INT      NOT NULL,
    [ANSWER_FLAG]     INT      NOT NULL,
    [ANSWER_DATE]     DATETIME NOT NULL,
    [ELAPSED_TIME]    INT      NOT NULL,
    CONSTRAINT [PK_M_QUIZ_ANSWERS] PRIMARY KEY CLUSTERED ([QUIZ_ANSWERS_ID] ASC)
);


GO
PRINT N'Creating [dbo].[M_QUIZ_RESULTS]...';


GO
CREATE TABLE [dbo].[M_QUIZ_RESULTS] (
    [QUIZ_RESULTS_ID] INT      NOT NULL,
    [USER_ID]         INT      NOT NULL,
    [QUIZ_ID]         INT      NOT NULL,
    [QUIZ_STATUS]     INT      NOT NULL,
    [ASSIGNED_BY_ID]  INT      NOT NULL,
    [ASSIGNED_DATE]   DATETIME NOT NULL,
    [COMPLETED_RATE]  REAL     NULL,
    [COMPLETED_DATE]  DATETIME NULL,
    CONSTRAINT [PK_M_QUIZ_RESULTS] PRIMARY KEY CLUSTERED ([QUIZ_RESULTS_ID] ASC)
);


GO
PRINT N'Creating [dbo].[M_QUIZES]...';


GO
CREATE TABLE [dbo].[M_QUIZES] (
    [QUIZ_ID]      INT            NOT NULL,
    [QUIZ_NAME]    NVARCHAR (100) NOT NULL,
    [COURSE_ID]    INT            NOT NULL,
    [AUTHOR_ID]    INT            NOT NULL,
    [CREATED_DATE] DATETIME       NOT NULL,
    [SUCCESS_RATE] REAL           NOT NULL,
    CONSTRAINT [PK_M_QUIZES] PRIMARY KEY CLUSTERED ([QUIZ_ID] ASC),
    CONSTRAINT [NK1_M_QUIZES] UNIQUE NONCLUSTERED ([QUIZ_NAME] ASC)
);


GO
PRINT N'Creating [dbo].[M_USERS]...';


GO
CREATE TABLE [dbo].[M_USERS] (
    [USER_ID]           INT            NOT NULL,
    [FIRSTNAME]         NVARCHAR (100) NOT NULL,
    [LASTNAME]          NVARCHAR (100) NOT NULL,
    [USERNAME]          NVARCHAR (100) NOT NULL,
    [HASHEDPASSWORD]    NVARCHAR (100) NOT NULL,
    [ROLESFLAG]         INT            NOT NULL,
    [REGISTRATION_DATE] DATETIME       NOT NULL,
    [LAST_LOGON_DATE]   DATETIME       NULL,
    CONSTRAINT [PK_M_USERS] PRIMARY KEY CLUSTERED ([USER_ID] ASC),
    CONSTRAINT [NK1_M_USERS] UNIQUE NONCLUSTERED ([USERNAME] ASC)
) ON [PRIMARY];


GO
PRINT N'Creating [dbo].[M_VARIANTS]...';


GO
CREATE TABLE [dbo].[M_VARIANTS] (
    [VARIANT_ID]  INT             NOT NULL,
    [QUESTION_ID] INT             NOT NULL,
    [VALUE]       INT             NOT NULL,
    [TEXT]        NVARCHAR (1000) NOT NULL,
    CONSTRAINT [PK_M_VARIANTS] PRIMARY KEY CLUSTERED ([VARIANT_ID] ASC)
);


GO
PRINT N'Creating [dbo].[S_PK_GENERATOR]...';


GO
CREATE TABLE [dbo].[S_PK_GENERATOR] (
    [TABLE_NAME] VARCHAR (30) NOT NULL,
    [TABLE_ID]   NUMERIC (18) NOT NULL,
    CONSTRAINT [XPK_S_PK_GENERATOR] PRIMARY KEY CLUSTERED ([TABLE_NAME] ASC)
) ON [PRIMARY];


GO
PRINT N'Creating [dbo].[T_LOG]...';


GO
CREATE TABLE [dbo].[T_LOG] (
    [Id]        INT            IDENTITY (1, 1) NOT NULL,
    [Date]      DATETIME       NOT NULL,
    [Thread]    VARCHAR (255)  NOT NULL,
    [Level]     VARCHAR (50)   NOT NULL,
    [Logger]    VARCHAR (255)  NOT NULL,
    [Message]   VARCHAR (4000) NOT NULL,
    [Exception] VARCHAR (2000) NULL
) ON [PRIMARY];


GO
PRINT N'Creating [dbo].[FK1_M_QUESTIONS]...';


GO
ALTER TABLE [dbo].[M_QUESTIONS]
    ADD CONSTRAINT [FK1_M_QUESTIONS] FOREIGN KEY ([QUIZ_ID]) REFERENCES [dbo].[M_QUIZES] ([QUIZ_ID]);


GO
PRINT N'Creating [dbo].[FK1_M_QUIZ_ANSWERS]...';


GO
ALTER TABLE [dbo].[M_QUIZ_ANSWERS]
    ADD CONSTRAINT [FK1_M_QUIZ_ANSWERS] FOREIGN KEY ([QUIZ_ID]) REFERENCES [dbo].[M_QUIZES] ([QUIZ_ID]);


GO
PRINT N'Creating [dbo].[FK2_M_QUIZ_ANSWERS]...';


GO
ALTER TABLE [dbo].[M_QUIZ_ANSWERS]
    ADD CONSTRAINT [FK2_M_QUIZ_ANSWERS] FOREIGN KEY ([QUESTION_ID]) REFERENCES [dbo].[M_QUESTIONS] ([QUESTION_ID]);


GO
PRINT N'Creating [dbo].[FK1_M_QUIZ_RESULTS]...';


GO
ALTER TABLE [dbo].[M_QUIZ_RESULTS]
    ADD CONSTRAINT [FK1_M_QUIZ_RESULTS] FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[M_USERS] ([USER_ID]);


GO
PRINT N'Creating [dbo].[FK2_M_QUIZ_RESULTS]...';


GO
ALTER TABLE [dbo].[M_QUIZ_RESULTS]
    ADD CONSTRAINT [FK2_M_QUIZ_RESULTS] FOREIGN KEY ([QUIZ_ID]) REFERENCES [dbo].[M_QUIZES] ([QUIZ_ID]);


GO
PRINT N'Creating [dbo].[FK3_M_QUIZ_RESULTS]...';


GO
ALTER TABLE [dbo].[M_QUIZ_RESULTS]
    ADD CONSTRAINT [FK3_M_QUIZ_RESULTS] FOREIGN KEY ([ASSIGNED_BY_ID]) REFERENCES [dbo].[M_USERS] ([USER_ID]);


GO
PRINT N'Creating [dbo].[FK1_M_QUIZES]...';


GO
ALTER TABLE [dbo].[M_QUIZES]
    ADD CONSTRAINT [FK1_M_QUIZES] FOREIGN KEY ([AUTHOR_ID]) REFERENCES [dbo].[M_USERS] ([USER_ID]);


GO
PRINT N'Creating [dbo].[FK2_M_QUIZES]...';


GO
ALTER TABLE [dbo].[M_QUIZES]
    ADD CONSTRAINT [FK2_M_QUIZES] FOREIGN KEY ([COURSE_ID]) REFERENCES [dbo].[M_COURSES] ([COURSE_ID]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK1_M_VARIANTS]...';


GO
ALTER TABLE [dbo].[M_VARIANTS]
    ADD CONSTRAINT [FK1_M_VARIANTS] FOREIGN KEY ([QUESTION_ID]) REFERENCES [dbo].[M_QUESTIONS] ([QUESTION_ID]);


GO
PRINT N'Creating [dbo].[CK1_M_QUIZ_RESULTS]...';


GO
ALTER TABLE [dbo].[M_QUIZ_RESULTS]
    ADD CONSTRAINT [CK1_M_QUIZ_RESULTS] CHECK ([COMPLETED_DATE] >0 AND [COMPLETED_DATE] <= 1);


GO
PRINT N'Creating [dbo].[CK1_M_QUIZES]...';


GO
ALTER TABLE [dbo].[M_QUIZES]
    ADD CONSTRAINT [CK1_M_QUIZES] CHECK ([SUCCESS_RATE] >0 AND [SUCCESS_RATE] <= 1);


GO
PRINT N'Creating [dbo].[V_M_USERS]...';


GO
CREATE VIEW [dbo].[V_M_USERS]
AS
SELECT [USER_ID], [FIRSTNAME], [LASTNAME], [USERNAME], [HASHEDPASSWORD], [ROLESFLAG], [REGISTRATION_DATE], [LAST_LOGON_DATE]
FROM  dbo.M_USERS
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
INSERT INTO  [dbo].[M_COURSES] ([COURSE_ID],[COURSE_NAME])
VALUES 
	(1,N'Английский язык'),
	(2,N'Русский язык'),
	(3,N'C# & Dot.NET')


/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
INSERT INTO [dbo].[M_USERS]
           ([USER_ID]
           ,[FIRSTNAME]
           ,[LASTNAME]
           ,[USERNAME]
           ,[HASHEDPASSWORD]
           ,[ROLESFLAG]
	   ,[REGISTRATION_DATE]
	   ,[LAST_LOGON_DATE])
     VALUES
           (1,'John','Doe', 'Jdoe', '123', 7, '1900-01-01',NULL),
		   (2,'Nikolay', 'Piskarev', 'np','123',3,'1900-01-01',NULL),
		   (3,'Igor','Kalugin','ki','123',7,'1900-01-01',NULL),
		   (4,'Barak','Obama','bo','123',1,'1900-01-01',NULL)


/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

INSERT INTO [dbo].[S_PK_GENERATOR] ([TABLE_NAME],[TABLE_ID]) 
VALUES 
	('M_USERS',5),
	('M_QUIZES',1),
	('M_QUESTIONS',1),
	('M_VARIANTS',1),
	('M_COURSES',4)
GO


GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
