/*
Deployment script for QuizDBTest

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "QuizDBTest"
:setvar DefaultFilePrefix "QuizDBTest"
:setvar DefaultDataPath "F:\mssql\data\"
:setvar DefaultLogPath "C:\mssql\log\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering [dbo].[P_SAVEUSER]...';


GO

-- =============================================
-- Author:		Anton Metlyakov
-- Create date: 02/12/2019
-- Description:	Saves user to table M_USERS (new (id=-1)/update (id>=0))
-- Input : user info fields
-- return : @error number, if any
-- =============================================
ALTER PROCEDURE [dbo].[P_SAVEUSER]
	@USERID int=-1,
	@USERNAME nvarchar(100),
	@FIRSTNAME nvarchar(100),
	@LASTNAME nvarchar(100),
	@HASHEDPASSWORD nvarchar(100),
	@ROLESFLAG int = 1,
	@ERROR int out,
	@ERRORTEXT nvarchar(100) out
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SET @ERROR = -10;
	SET @ERRORTEXT = N'тест возвращаемого значения';
	BEGIN TRY
		IF (@USERID = -1) 
		BEGIN
		/* new user */
			IF EXISTS(SELECT * FROM dbo.M_USERS WHERE USERNAME = @USERNAME)
				SELECT @ERROR = -1,	@ERRORTEXT = N'Dublicate Username '+@USERNAME + N' in M_USERS table';
			ELSE
			BEGIN
				DECLARE @NEWID NUMERIC;
				EXECUTE dbo.P_GETNEXTPK @TABLE_NAME = 'M_USERS', @ID = @NEWID OUT
				INSERT INTO dbo.M_USERS (USER_ID,FIRSTNAME,LASTNAME,USERNAME, HASHEDPASSWORD, ROLESFLAG,[REGISTRATION_DATE],[LAST_LOGON_DATE] )
					VALUES (@NEWID,@FIRSTNAME,@LASTNAME,@USERNAME,@HASHEDPASSWORD,@ROLESFLAG, GETDATE(), NULL)
			END
		END
		ELSE
		BEGIN
		/* Update existing user info */
			IF NOT EXISTS(SELECT * FROM dbo.M_USERS WHERE USERNAME = @USERNAME)
				SELECT @ERROR = -1,	@ERRORTEXT = N'No Username '+@USERNAME + N' in M_USERS table';
			ELSE
			BEGIN
				UPDATE dbo.M_USERS 
				SET FIRSTNAME = @FIRSTNAME,
					LASTNAME = @LASTNAME,
					HASHEDPASSWORD = @HASHEDPASSWORD,
					ROLESFLAG = @ROLESFLAG
				WHERE USER_ID = @USERID
			END
		END
	END TRY
	BEGIN CATCH
		SELECT @ERROR = ERROR_NUMBER(), @ERRORTEXT = ERROR_MESSAGE();
	END CATCH
END
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
DELETE FROM [dbo].[M_COURSES];
GO

INSERT INTO  [dbo].[M_COURSES] ([COURSE_ID],[COURSE_NAME])
VALUES 
	(1,N'Английский язык'),
	(2,N'Русский язык'),
	(3,N'C# & Dot.NET')


/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
DELETE FROM [dbo].[M_USERS]
GO
INSERT INTO [dbo].[M_USERS]
           ([USER_ID]
           ,[FIRSTNAME]
           ,[LASTNAME]
           ,[USERNAME]
           ,[HASHEDPASSWORD]
           ,[ROLESFLAG]
	   ,[REGISTRATION_DATE]
	   ,[LAST_LOGON_DATE])
     VALUES
           (1,'John','Doe', 'Jdoe', '123', 7, '1900-01-01',NULL),
		   (2,'Nikolay', 'Piskarev', 'np','123',3,'1900-01-01',NULL),
		   (3,'Igor','Kalugin','ki','123',7,'1900-01-01',NULL),
		   (4,'Barak','Obama','bo','123',1,'1900-01-01',NULL)


/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

DELETE FROM  [dbo].[S_PK_GENERATOR]
GO
INSERT INTO [dbo].[S_PK_GENERATOR] ([TABLE_NAME],[TABLE_ID]) 
VALUES 
	('M_USERS',5),
	('M_QUIZES',1),
	('M_QUESTIONS',1),
	('M_VARIANTS',1),
	('M_COURSES',4)
GO


GO

GO
PRINT N'Update complete.';


GO
