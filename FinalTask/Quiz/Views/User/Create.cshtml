@model Quiz.Models.UserModel
<div class="modal-content">
    <div class="modal-header">
        <h4>Create user</h4>
    </div>
    <div class="modal-body openUserDetails">
        @using (Html.BeginForm("Create", "User", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.UserName, new { @placeholder = "", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.FirstName, new { @placeholder = "", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.LastName, new { @placeholder = "", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.PasswordFor(model => model.Password, new { @placeholder = "", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Roles, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxesForEnumFlagsFor(model => model.Roles)
                        @Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger" })
                    </div>
                </div>

                <hr />
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button name="action" value="create" class="btnviewclose">Create</button>
                        <!--   <button name="action" value="cancel" class="btnviewclose">Cancel</button> -->
                        <button name="action" value="cancel" class="btnviewclose" data-dismiss="modal" area-hidden="true">Cancel</button>
                    </div>
                </div>

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        }

    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryajax")

}
