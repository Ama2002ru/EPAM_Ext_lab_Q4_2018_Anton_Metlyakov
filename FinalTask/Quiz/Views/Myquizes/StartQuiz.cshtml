@model Quiz.Models.QuestionModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<section>
    <article>

        <div>
            @using (Html.BeginForm("GetNextQuestion", "Myquizes", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <h4>Testing </h4>
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.QuizResult_Id)
                    @Html.HiddenFor(model => model.Question_Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Info, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.Info, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Info, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div>
                        <div>
                            @if (Model !=null  && Model.Options != null)
                            {
                                for (int i = 0; i < Model.Options.Length; i++)
                                {
                                    string checkboxname = "variant" + i.ToString();
                                    string labelname = "labelvariant" + i.ToString();
                                    <div>
                                        <input type="checkbox" name=@checkboxname />
                                        <label name=@labelname>
                                            @Model.Options[i].Text
                                        </label>
                                    </div>
                                }
                            }
                            else
                            {
                                @Html.Label("none", htmlAttributes: new { @class = "control-label col-md-2" })
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Next" class="btnviewclose" />
                        </div>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink("Terminate quiz", "Index")
            </div>
        </div>
    </article>
</section>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
